openapi: 3.0.3
info:
  title: Atgenomix SeqsLab V3 platform API
  version: 3.0.0
  description: GA4GH-compliant RESTful API apps in Atgenomix SeqsLab platform, the
    cloud-first and enterprise BioMed-IT infrastructure.
paths:
  /trs/v2/schema/:
    get:
      operationId: root_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      security:
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /trs/v2/toolclass/:
    get:
      operationId: trs_v2_toolclass_list
      description: ''
      tags:
      - trs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolClass'
          description: ''
  /trs/v2/tools/:
    get:
      operationId: trs_v2_tools_list
      description: ''
      tags:
      - trs
      security:
      - jwtAuth: []
      responses:
        application/json:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTool'
          description: ''
    post:
      operationId: trs_v2_tools_create
      description: ''
      tags:
      - trs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
          description: ''
  /trs/v2/tools/{tools_id}/:
    get:
      operationId: trs_v2_tools_retrieve
      description: ''
      parameters:
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      tags:
      - trs
      security:
      - jwtAuth: []
      responses:
        application/json:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTool'
          description: ''
  /trs/v2/tools/{tools_id}/versions/:
    get:
      operationId: trs_v2_tools_versions_list
      description: View set for creating versions of a tool
      parameters:
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      tags:
      - trs
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        application/json:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolVersions'
          description: ''
    post:
      operationId: trs_v2_tools_versions_create
      description: View set for creating versions of a tool
      parameters:
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      - in: query
        name: workspace
        schema:
          type: string
        description: workspace for storing trs tools
        required: true
      tags:
      - trs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolVersionsRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolVersions'
          description: ''
  /trs/v2/tools/{tools_id}/versions/{versions_id}/:
    get:
      operationId: trs_v2_tools_versions_retrieve
      description: View set for creating versions of a tool
      parameters:
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      - in: path
        name: versions_id
        schema:
          type: string
        required: true
      tags:
      - trs
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolVersions'
          description: ''
  /trs/v2/tools/{tools_id}/versions/{versions_id}/{type}/descriptor/:
    get:
      operationId: trs_v2_tools_versions_descriptor_retrieve
      description: View set for creating a test / descriptor / descriptor/{relative_path}
      parameters:
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      - in: path
        name: type
        schema:
          type: string
        required: true
      - in: path
        name: versions_id
        schema:
          type: string
        required: true
      tags:
      - trs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolVersionType'
          description: ''
  /trs/v2/tools/{tools_id}/versions/{versions_id}/{type}/descriptor/{relative_path}/:
    get:
      operationId: trs_v2_relative_path
      description: View set for creating a test / descriptor / descriptor/{relative_path}
      parameters:
      - in: path
        name: relative_path
        schema:
          type: string
        required: true
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      - in: path
        name: type
        schema:
          type: string
        required: true
      - in: path
        name: versions_id
        schema:
          type: string
        required: true
      tags:
      - trs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolVersionType'
          description: ''
  /trs/v2/tools/{tools_id}/versions/{versions_id}/{type}/files/:
    get:
      operationId: trs_v2_tools_versions_files_list
      description: View set for creating a toolfile
      parameters:
      - in: query
        name: file_format
        schema:
          type: string
          enum:
          - zip
        description: 'Returns a zip file of all files when file_format=zip is specified. '
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      - in: path
        name: type
        schema:
          type: string
        required: true
      - in: path
        name: versions_id
        schema:
          type: string
        required: true
      tags:
      - trs
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolFile'
          description: ''
    post:
      operationId: trs_v2_tools_versions_files_create
      description: |-
        1. check file_info and create checksum
        2. check the file is exist in this version or not
        3. create information in RDB
        4. upload data to GEN2
      parameters:
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      - in: path
        name: type
        schema:
          type: string
        required: true
      - in: path
        name: versions_id
        schema:
          type: string
        required: true
      tags:
      - trs
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToolsFileInputRequest'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolFile'
          description: ''
  /trs/v2/tools/{tools_id}/versions/{versions_id}/{type}/tests/:
    get:
      operationId: trs_v2_tools_versions_tests_retrieve
      description: View set for creating a test / descriptor / descriptor/{relative_path}
      parameters:
      - in: path
        name: tools_id
        schema:
          type: string
        required: true
      - in: path
        name: type
        schema:
          type: string
        required: true
      - in: path
        name: versions_id
        schema:
          type: string
        required: true
      tags:
      - trs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolVersionType'
          description: ''
  /trs/v2/tools/{type}/files/:
    post:
      operationId: trs_v2_tools_files_create
      description: |-
        type should be "WDL", "CWL"
        file should be a zip file
      parameters:
      - in: path
        name: type
        schema:
          type: string
          enum:
          - CWL
          - WDL
          - NFL
        description: The output type of the descriptor.
        required: true
      tags:
      - trs
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileContent'
          description: ''
components:
  schemas:
    Checksum:
      type: object
      properties:
        checksum:
          type: string
        type:
          type: string
      required:
      - checksum
      - type
    DescriptorTypeEnum:
      enum:
      - CWL
      - WDL
      - NFL
      type: string
    FileContent:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        path:
          type: string
        content:
          type: string
      required:
      - content
      - name
      - path
      - type
    FileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
      required:
      - file
    FileTypeEnum:
      enum:
      - TEST_FILE
      - PRIMARY_DESCRIPTOR
      - SECONDARY_DESCRIPTOR
      - CONTAINERFILE
      - OTHER
      type: string
    GetTool:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ToolVersions'
        toolclass:
          $ref: '#/components/schemas/ToolClass'
        name:
          type: string
          pattern: ^[0-9a-zA-Z\-\._]+$
          maxLength: 64
        description:
          type: string
          nullable: true
          maxLength: 512
        meta_version:
          type: string
          format: date-time
          readOnly: true
        aliases:
          type: object
          additionalProperties: {}
        organization:
          type: string
          readOnly: true
        checker_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - meta_version
      - name
      - organization
      - versions
    ImageTypeEnum:
      enum:
      - Docker
      - Singularity
      type: string
    Tool:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        toolclass:
          $ref: '#/components/schemas/ToolClass'
        name:
          type: string
          pattern: ^[0-9a-zA-Z\-\._]+$
          maxLength: 64
        description:
          type: string
          nullable: true
          maxLength: 512
        meta_version:
          type: string
          format: date-time
          readOnly: true
        aliases:
          type: object
          additionalProperties: {}
        organization:
          type: string
          readOnly: true
        checker_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - meta_version
      - name
      - organization
    ToolClass:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: ^[0-9a-zA-Z\-\._]+$
          maxLength: 64
        description:
          type: string
          readOnly: true
      required:
      - description
      - id
      - name
    ToolClassRequest:
      type: object
      properties:
        name:
          type: string
          pattern: ^[0-9a-zA-Z\-\._]+$
          maxLength: 64
      required:
      - name
    ToolFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        path:
          type: string
          pattern: ^(((https|abfss)://[-\w\.]+/)|file:///)?
          maxLength: 200
        file_type:
          $ref: '#/components/schemas/FileTypeEnum'
        checksum:
          type: string
          pattern: ^[a-z0-9-]+:[a-f0-9]+$
          maxLength: 200
        image:
          type: integer
          readOnly: true
        version:
          type: integer
          readOnly: true
      required:
      - checksum
      - file_type
      - id
      - image
      - path
      - version
    ToolRequest:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        toolclass:
          $ref: '#/components/schemas/ToolClassRequest'
        name:
          type: string
          pattern: ^[0-9a-zA-Z\-\._]+$
          maxLength: 64
        description:
          type: string
          nullable: true
          maxLength: 512
        aliases:
          type: object
          additionalProperties: {}
        checker_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - name
    ToolVersionType:
      type: object
      properties:
        content:
          type: string
        checksum:
          type: array
          items:
            $ref: '#/components/schemas/Checksum'
        url:
          $ref: '#/components/schemas/file'
      required:
      - checksum
      - content
      - url
    ToolVersions:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/ToolsImage'
        author:
          type: object
          additionalProperties: {}
        name:
          type: string
          nullable: true
          maxLength: 64
        version_id:
          type: string
          pattern: ^\d+\.\d+(\.\d+)?$
          maxLength: 16
        is_production:
          type: boolean
        storage_url:
          type: string
          format: uri
          maxLength: 200
        descriptor_type:
          $ref: '#/components/schemas/DescriptorTypeEnum'
        meta_version:
          type: string
          format: date-time
          readOnly: true
        verified:
          type: boolean
        verified_source:
          type: object
          additionalProperties: {}
        signed:
          type: boolean
        included_apps:
          type: object
          additionalProperties: {}
      required:
      - descriptor_type
      - meta_version
      - storage_url
      - version_id
    ToolVersionsRequest:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/ToolsImageRequest'
        author:
          type: object
          additionalProperties: {}
        name:
          type: string
          nullable: true
          maxLength: 64
        version_id:
          type: string
          pattern: ^\d+\.\d+(\.\d+)?$
          maxLength: 16
        is_production:
          type: boolean
        storage_url:
          type: string
          format: uri
          maxLength: 200
        descriptor_type:
          $ref: '#/components/schemas/DescriptorTypeEnum'
        verified:
          type: boolean
        verified_source:
          type: object
          additionalProperties: {}
        signed:
          type: boolean
        included_apps:
          type: object
          additionalProperties: {}
      required:
      - descriptor_type
      - storage_url
      - version_id
    ToolsFileInputRequest:
      type: object
      properties:
        file_info:
          type: object
          additionalProperties: {}
        file:
          type: string
          format: binary
          description: Please upload zip file
      required:
      - file
      - file_info
    ToolsImage:
      type: object
      properties:
        image_type:
          $ref: '#/components/schemas/ImageTypeEnum'
        image_name:
          type: string
          maxLength: 200
        registry_host:
          type: string
          maxLength: 200
        size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        updated_time:
          type: string
          format: date-time
          readOnly: true
        checksum:
          type: string
          pattern: ^[a-z0-9-]+:[a-f0-9]+$
          maxLength: 200
      required:
      - checksum
      - image_name
      - image_type
      - registry_host
      - updated_time
    ToolsImageRequest:
      type: object
      properties:
        image_type:
          $ref: '#/components/schemas/ImageTypeEnum'
        image_name:
          type: string
          maxLength: 200
        registry_host:
          type: string
          maxLength: 200
        size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        checksum:
          type: string
          pattern: ^[a-z0-9-]+:[a-f0-9]+$
          maxLength: 200
      required:
      - checksum
      - image_name
      - image_type
      - registry_host
    Url:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
      - url
    file:
      type: object
      properties:
        descriptorfile:
          $ref: '#/components/schemas/Url'
        containerfile:
          $ref: '#/components/schemas/Url'
      required:
      - descriptorfile
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: Bearer
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
